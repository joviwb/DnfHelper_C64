#include "pch.h"

bool 坐标相等(坐标型 当前坐标, 坐标型 目标坐标)
{
	if (当前坐标.参_横轴坐标 == 目标坐标.参_横轴坐标 && 当前坐标.参_纵轴坐标 == 目标坐标.参_纵轴坐标)return true;
	else return false;
}

bool 是否在BOSS房()
{
	坐标型 局_普通房间;
	坐标型 局_领主房间;
	局_普通房间 = 全局_收包数据.参_当前坐标;
	局_领主房间 = 全局_收包数据.参_领主坐标;
	if (局_普通房间.参_横轴坐标 == 局_领主房间.参_横轴坐标 && 局_普通房间.参_纵轴坐标 == 局_领主房间.参_纵轴坐标)
	{
		return true;
	}
	else
	{
		return false;
	}
}



int 取疲劳()
{
	return 超级解密(最大疲劳) - 超级解密(已用疲劳);
}

bool 是否开门()
{
	if (超级解密(读写_读整数型(读写_读长整数(人物基址) + 地图偏移) + 是或否开门) > 0)
	{
		return false;
	}
	else
	{
		return true;
	}
}

int 等级自动()
{
	int 地图 = 读写_读长整数(角色等级);
	if (地图 <= 17) {
		if (地图 <= 5) {
			return 5;//雷鸣废墟
		}
		else if (地图 <= 8) {
			return 6;//猛毒雷鸣废墟
		}
		else if (地图 <= 11) {
			return 9;//冰霜幽暗密林
		}
		else if (地图 <= 13) {
			return 7;//格拉卡
		}
		else if (地图 <= 15) {
			全局_自动.副本难度 = 0;
			return 8;//烈焰格拉卡
		}
		else if (地图 <= 17) {
			全局_自动.副本难度 = 0;
			return 1000;//暗黑雷鸣废墟
		}
	}
	else if (地图 <= 23) {
		if (地图 <= 18) {
			全局_自动.副本难度 = 0;
			return 1000;//暗黑雷鸣废墟
		}
		else if (地图 <= 19) {
			全局_自动.副本难度 = 1;
			return 12;//人偶玄关
		}
		else if (地图 <= 20) {
			全局_自动.副本难度 = 1;
			return 13;//石巨人塔
		}
		else if (地图 <= 21) {
			全局_自动.副本难度 = 1;
			return 14;//黑暗玄廊
		}
		else if (地图 <= 22) {
			全局_自动.副本难度 = 1;
			return 17;//悬空城
		}
		else if (地图 <= 23) {
			全局_自动.副本难度 = 1;
			return 15;//城主宫殿
		}
	}
	else if (地图 <= 29) {
		if (地图 <= 24) {
			全局_自动.副本难度 = 1;
			return  15;//城主宫殿
		}
		else if (地图 <= 25) {
			全局_自动.副本难度 = 1;
			return 22;//树精丛林
		}
		else if (地图 <= 26) {
			全局_自动.副本难度 = 1;
			return 23;//炼狱
		}
		else if (地图 <= 27) {
			全局_自动.副本难度 = 1;
			return 24;//极昼
		}
		else if (地图 <= 28) {
			全局_自动.副本难度 = 1;
			return 25;//第一脊椎
		}
		else if (地图 <= 29) {
			全局_自动.副本难度 = 1;
			return 26;//第二脊椎
		}
	}
	else if (地图 <= 35) {
		if (地图 <= 30) {
			全局_自动.副本难度 = 1;
			return 26;//第二脊椎
		}
		else if (地图 <= 31) {
			全局_自动.副本难度 = 2;
			return 32;//蜘蛛洞穴
		}
		else if (地图 <= 32) {
			全局_自动.副本难度 = 2;
			return 150;//蜘蛛王国
		}
		else if (地图 <= 33) {
			全局_自动.副本难度 = 2;
			return 151;//英雄冢
		}
		else if (地图 <= 34) {
			全局_自动.副本难度 = 2;
			return 35;//暗精灵墓地
		}
		else if (地图 <= 35) {
			全局_自动.副本难度 = 2;
			return 34;//熔岩穴
		}
	}
	else if (地图 <= 39) {
		if (地图 <= 36) {
			全局_自动.副本难度 = 2;
			return  34;//熔岩穴
		}
		else if (地图 <= 37) {
			全局_自动.副本难度 = 2;
			return 153;//黄金矿洞
		}
		else if (地图 <= 38) {
			全局_自动.副本难度 = 2;
			return 154;//远古墓穴深处
		}
		else if (地图 <= 39) {
			全局_自动.副本难度 = 2;
			return 154;//远古墓穴深处
		}
	}
	else if (地图 <= 45) {
		if (地图 <= 40) {
			全局_自动.副本难度 = 2;
			return 40;//山脊
		}
		else if (地图 <= 41) {
			全局_自动.副本难度 = 2;
			return 41;//冰心少年
		}
		else if (地图 <= 42) {
			全局_自动.副本难度 = 2;
			return 42;//利库天井
		}
		else if (地图 <= 43) {
			全局_自动.副本难度 = 2;
			return 43;//白色废墟
		}
		else if (地图 <= 44) {
			全局_自动.副本难度 = 2;
			return 43;//白色废墟
		}
		else if (地图 <= 45) {
			全局_自动.副本难度 = 2;
			return 141;//布万加的修炼场
		}
	}
	else if (地图 <= 49) {
		if (地图 <= 46) {
			全局_自动.副本难度 = 2;
			return 141;//布万加的修炼场
		}
		else if (地图 <= 47) {
			全局_自动.副本难度 = 3;
			return 50;//堕落的盗贼
		}
		else if (地图 <= 48) {
			全局_自动.副本难度 = 3;
			return 50;//堕落的盗贼
		}
		else if (地图 <= 49) {
			全局_自动.副本难度 = 3;
			return 52;//血蝴蝶之舞
		}
	}
	else if (地图 <= 53) {
		if (地图 <= 50) {
			全局_自动.副本难度 = 3;
			return  52;//血蝴蝶之舞
		}
		else if (地图 <= 51) {
			全局_自动.副本难度 = 3;
			return 145;//冰晶森林
		}
		else if (地图 <= 52) {
			全局_自动.副本难度 = 3;
			return 146;//水晶矿脉
		}
		else if (地图 <= 53) {
			全局_自动.副本难度 = 3;
			return 148;//幽冥监狱
		}
	}
	else if (地图 <= 57) {
		if (地图 <= 54) {
			全局_自动.副本难度 = 3;
			return 148;//幽冥监狱
		}
		else if (地图 <= 55) {
			全局_自动.副本难度 = 3;
			return 157;//蚁后的巢穴
		}
		else if (地图 <= 56) {
			全局_自动.副本难度 = 3;
			return 158;//腐烂之地
		}
		else if (地图 <= 57) {
			全局_自动.副本难度 = 3;
			return 159;//赫顿玛尔旧街区
		}
	}
	else if (地图 <= 62) {
		if (地图 <= 58) {
			全局_自动.副本难度 = 3;
			return 159;//赫顿玛尔旧街区
		}
		else if (地图 <= 59) {
			全局_自动.副本难度 = 3;
			return 162;//人鱼国度
		}
		else if (地图 <= 60) {
			全局_自动.副本难度 = 3;
			return 163;//GBL女神殿
		}
		else if (地图 <= 61) {
			全局_自动.副本难度 = 3;
			return 164;//树精繁殖地
		}
		else if (地图 <= 62) {
			全局_自动.副本难度 = 3;
			return 164;//树精繁殖地
		}
	}
	else if (地图 <= 70) {
		if (地图 <= 63) {
			全局_自动.副本难度 = 3;
			return 164;//树精繁殖地
		}
		else if (地图 <= 64) {
			全局_自动.副本难度 = 3;
			return 80;//根特外围
		}
		else if (地图 <= 65) {
			全局_自动.副本难度 = 3;
			return 81;//根特东门
		}
		else if (地图 <= 66) {
			全局_自动.副本难度 = 3;
			return 82;//根特南门
		}
		else if (地图 <= 67) {
			全局_自动.副本难度 = 3;
			return 89;//根特防御战
		}
		else if (地图 <= 68) {
			全局_自动.副本难度 = 3;
			return 83;//夜间袭击战
		}
		else if (地图 <= 69) {
			全局_自动.副本难度 = 3;
			return 84;//补给线阻断战
		}
		else if (地图 <= 70) {
			全局_自动.副本难度 = 3;
			return 85;//追击歼灭战
		}
	}
	else if (地图 <= 74) {
		if (地图 <= 71) {
			全局_自动.副本难度 = 3;
			return 85;//追击歼灭战
		}
		else if (地图 <= 72) {
			全局_自动.副本难度 = 3;
			return 87;//夺回西部线
		}
		else if (地图 <= 73) {
			全局_自动.副本难度 = 3;
			return 92;//雾都赫伊斯
		}
		else if (地图 <= 74) {
			全局_自动.副本难度 = 3;
			return 93;//阿登高地
		}
	}
	else if (地图 <= 80) {
		if (地图 <= 75) {
			全局_自动.副本难度 = 3;
			return 93;//阿登高地
		}
		else if (地图 <= 76) {
			全局_自动.副本难度 = 4;
			return 70; //格兰之火
		}
		else if (地图 <= 77) {
			全局_自动.副本难度 = 4;
			return 71; //瘟疫之源
		}
		else if (地图 <= 78) {
			全局_自动.副本难度 = 4;
			return 72;//卡勒特之初
		}
		else if (地图 <= 79) {
			全局_自动.副本难度 = 4;
			return 74;//绝密区域
		}
		else if (地图 <= 80) {
			全局_自动.副本难度 = 4;
			return 76;//凛冬
		}
	}
	else if (地图 <= 85) {
		if (地图 <= 80) {
			全局_自动.副本难度 = 4;
			return 76;//凛冬
		}
		else if (地图 <= 81) {
			全局_自动.副本难度 = 4;
			return 76;//凛冬
		}
		else if (地图 <= 82) {
			全局_自动.副本难度 = 4;
			return 102;//普鲁兹发电站
		}
		else if (地图 <= 83) {
			全局_自动.副本难度 = 4;
			return 104;//格兰迪发电站
		}
		else if (地图 <= 84) {
			全局_自动.副本难度 = 4;
			return 104;//格兰迪发电站
		}
		else if (地图 <= 85) {
			全局_自动.副本难度 = 4;
			return 104;//格兰迪发电站
		}
	}
	else if (地图 <= 90) {
		if (地图 <= 86) {
			全局_自动.副本难度 = 4;
			return 104;//格兰迪发电站
		}
		else if (地图 <= 87) {
			全局_自动.副本难度 = 4;
			return 192;//钢铁之臂
		}
		else if (地图 <= 88) {
			全局_自动.副本难度 = 4;
			return 192;//钢铁之臂
		}
		else if (地图 <= 89) {
			全局_自动.副本难度 = 4;
			return 192;//钢铁之臂
		}
		else if (地图 <= 90) {
			全局_自动.副本难度 = 4;
			return 192;//钢铁之臂
		}
	}
	else if (地图 <= 95) {
		if (地图 <= 91) {
			全局_自动.副本难度 = 4;
			return 291100293;//全蚀市场
		}
		else if (地图 <= 92) {
			全局_自动.副本难度 = 4;
			return 291100268;//亡命杀镇
		}
		else if (地图 <= 93) {
			全局_自动.副本难度 = 4;
			return 291100268;//亡命杀镇
		}
		else if (地图 <= 94) {
			全局_自动.副本难度 = 4;
			return 291100268;//亡命杀镇
		}
		else if (地图 <= 95) {
			全局_自动.副本难度 = 4;
			return 291100268;//亡命杀镇
		}
		else if (地图 <= 96) {
			全局_自动.副本难度 = 1;
			return 100000002;//皇宫根特
		}
		else if (地图 <= 97) {
			全局_自动.副本难度 = 1;
			return 100000002;//皇宫根特
		}
		else if (地图 <= 98) {
			return 100000002;//皇宫根特
		}
		else if (地图 <= 99) {
			return 100000002;//暗黑神殿
		}
	}
	else if (地图 <= 100) {
		return 100000002;//暗黑神殿
	}
	return 0;
}


float 怪物_坐标(__int64 nPointer, int nMode)
{
	//检查参数是否合法
	if (nMode < 0 || nMode > 2)
	{
		return 0.0f;
	}
	//判断指针类型
	__int64 nOffset = 读写_读长整数(nPointer + 怪物坐标); //对象坐标偏移
	return *(float*)(nOffset + nMode * 4 + 0x20);
}

float 人物_坐标(__int64 nPointer, int nMode)
{
	//检查参数是否合法
	if (nMode < 0 || nMode > 2)
	{
		return 0.0f;
	}
	__int64 nOffset = 读写_读长整数(nPointer + 人物坐标); //读取坐标
	return *(float*)(nOffset + nMode * 4);
}

bool 跳过数据()
{
	bool 局_跳过;
	ULONG64 局_首部 = 读写_读长整数(读写_读长整数(任务基址)+ 任务首地址);
	ULONG64 局_尾部 = 读写_读长整数(读写_读长整数(任务基址)+ 任务尾地址);
	DWORD 局_个数 = 汇编_减(局_尾部, 局_首部) / 8;
	for (size_t 局_计次 = 0; 局_计次 < 局_个数; 局_计次++)
	{
		ULONG64 局_地址 = 读写_读长整数(局_首部+ 局_计次 * 8);
		ULONG 局_类型 = 读写_读整数型(局_地址+ 任务类型);
		if (局_类型 == 0)
		{
			ULONG64 任务编号 = 读写_读长整数(局_地址);
			ULONG 局_等级 = 读写_读整数型(局_地址+ 任务等级);
			if (局_等级 < 读写_读长整数(角色等级))
			{
				局_跳过 = true;
			}
		}
	}
	return 局_跳过;
}

坐标型 读坐标(ULONG64 参数指针)
{
	坐标型 方;
	ULONG64 指针 = 读写_读长整数(参数指针 + 怪物坐标);
	方.X = 读写_读小数型(指针 + 32);
	方.Y = 读写_读小数型(指针 + 36);
	方.Z = 读写_读小数型(指针 + 40);
	return 方;
}